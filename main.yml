---
- name: Setup Paperless-ngx
  hosts: all
  become: true
  gather_facts: false

  vars_files:
    - config.yml

  tasks:
    - name: Install required packages
      ansible.builtin.package:
        name:
          - cifs-utils
          - nfs-common
        state: present

    - name: Create paperless directory
      ansible.builtin.file:
        path: "{{ paperless_docker_path }}"
        owner: "{{ paperless_docker_owner }}"
        group: "{{ paperless_docker_group }}"
        state: directory
        mode: '0755'

    - name: Mount paperless consume directory
      block:
        - name: Create paperless consume mountpoint
          ansible.builtin.file:
            path: "{{ paperless_docker_path }}/consume"
            state: directory
            mode: '0777'

        - name: Mount paperless consume directory
          ansible.posix.mount:
            path: "{{ paperless_docker_path }}/consume"
            src: "{{ paperless_docker_share_consume.src }}"
            opts: "{{ paperless_docker_share_consume.opts }}"
            fstype: "{{ paperless_docker_share_consume.fstype }}"
            state: mounted
          notify: restart paperless-ngx
      when:
        - paperless_docker_share_consume is defined
        - paperless_docker_share_consume | length

    - name: Mount paperless export directory
      block:
        - name: Create paperless export mountpoint
          ansible.builtin.file:
            path: "{{ paperless_docker_path }}/export"
            state: directory
            mode: '0755'

        - name: Mount paperless export directory
          ansible.posix.mount:
            path: "{{ paperless_docker_path }}/export"
            src: "{{ paperless_docker_share_export.src }}"
            opts: "{{ paperless_docker_share_export.opts }}"
            fstype: "{{ paperless_docker_share_export.fstype }}"
            state: mounted
          notify: restart paperless-ngx
      when:
        - paperless_docker_share_export is defined
        - paperless_docker_share_export | length

    - name: Mount paperless media directory
      block:
        - name: Create paperless media mountpoint
          ansible.builtin.file:
            path: "{{ paperless_docker_path }}/media"
            state: directory
            mode: '0755'

        - name: Mount paperless media directory
          ansible.posix.mount:
            path: "{{ paperless_docker_path }}/media"
            src: "{{ paperless_docker_share_media.src }}"
            opts: "{{ paperless_docker_share_media.opts }}"
            fstype: "{{ paperless_docker_share_media.fstype }}"
            state: mounted
          notify: restart paperless-ngx
      when:
        - paperless_docker_share_media is defined
        - paperless_docker_share_media | length

    - name: Manage paperless docker compose environment
      ansible.builtin.template:
        src: compose.env.j2
        dest: "{{ paperless_docker_path }}/compose.env"
        owner: "{{ paperless_docker_owner }}"
        group: "{{ paperless_docker_group }}"
        trim_blocks: false
        mode: '0644'
      notify: restart paperless-ngx

    - name: Manage paperless docker compose deployment
      ansible.builtin.template:
        src: compose.yaml.j2
        dest: "{{ paperless_docker_path }}/compose.yaml"
        owner: "{{ paperless_docker_owner }}"
        group: "{{ paperless_docker_group }}"
        mode: '0644'
      notify: restart paperless-ngx

    - name: Manage paperless docker compose override
      ansible.builtin.copy:
        content: "{{ paperless_docker_override | to_nice_yaml(indent=2) }}"
        dest: "{{ paperless_docker_path }}/compose.override.yaml"
        owner: "{{ paperless_docker_owner }}"
        group: "{{ paperless_docker_group }}"
        mode: '0644'
      notify: restart paperless-ngx

    - name: Validate paperless docker compose deployment
      ansible.builtin.command:
        cmd: docker compose config --quiet
        chdir: "{{ paperless_docker_path }}"
      changed_when: false

    - name: Startup paperless docker compose deployment
      ansible.builtin.command:
        cmd: docker compose --ansi never --progress plain up --detach
        chdir: "{{ paperless_docker_path }}"
      register: _container_startup
      changed_when: "'Started' in _container_startup.stdout"

    - name: Setup paperless backup cronjob
      ansible.builtin.cron:
        name: backup paperless-ngx
        minute: "0"
        hour: "2"
        job: >-
          docker compose --project-directory={{ paperless_docker_path }} exec
          webserver document_exporter /usr/src/paperless/export -z --delete

  handlers:
    - name: Restart paperless docker compose deployment
      ansible.builtin.command:
        cmd: docker compose --ansi never --progress plain restart
        chdir: "{{ paperless_docker_path }}"
      changed_when: true
      listen: restart paperless-ngx
